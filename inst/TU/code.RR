GeoIP_open = 
  function(x1, x2, ..., .cif = CIF(pointerType, list(stringType, sint32Type)))
{
  ans =  callCIF(.cif, 'GeoIP_open',  x1, x2, ...)
  new('GeoIPRef', ref = ans)
}

setClass('GeoIP', representation(GeoIPDatabase = 'FILE', file_path = 'character', cache = 'unsigned char', index_cache = 'unsigned char', databaseSegments = 'unsigned int', databaseType = 'integer', mtime = 'integer', flags = 'integer', size = 'integer', record_length = 'integer', charset = 'integer', record_iter = 'integer', netmask = 'integer', last_mtime_check = 'integer'))
setClass('GeoIPRef', contains = 'RCReference')
setMethod('$', 'GeoIPRef', function(x, name) 
getStructField(x, name, structType(list(GeoIPDatabase = pointerType, file_path = stringType, cache = pointerType, index_cache = pointerType, databaseSegments = pointerType, databaseType = sint32Type, mtime = sint32Type, flags = sint32Type, size = sint32Type, record_length = sint32Type, charset = sint32Type, record_iter = sint32Type, netmask = sint32Type, last_mtime_check = sint32Type))))
setAs('GeoIPRef', 'GeoIP', function(from) as(from@ref, 'GeoIP'))
setAs('externalptr', 'GeoIPRef', function(from) new('GeoIPRef', ref = from))
setAs('externalptr', 'GeoIP', function(from) setSlots( getStructValue(from, structType(list(GeoIPDatabase = pointerType, file_path = stringType, cache = pointerType, index_cache = pointerType, databaseSegments = pointerType, databaseType = sint32Type, mtime = sint32Type, flags = sint32Type, size = sint32Type, record_length = sint32Type, charset = sint32Type, record_iter = sint32Type, netmask = sint32Type, last_mtime_check = sint32Type))), new('GeoIP')))
setGeneric('GeoIP', function(GeoIPDatabase, file_path, cache, index_cache, databaseSegments, databaseType, mtime, flags, size, record_length, charset, record_iter, netmask, last_mtime_check, .obj = new('GeoIP')) standardGeneric('GeoIP'))
setMethod('GeoIP', 'ANY', function(GeoIPDatabase, file_path, cache, index_cache, databaseSegments, databaseType, mtime, flags, size, record_length, charset, record_iter, netmask, last_mtime_check, .obj = new('GeoIP')) {
if(!missing(GeoIPDatabase))  .obj@GeoIPDatabase = as(GeoIPDatabase, 'FILE')
if(!missing(file_path))  .obj@file_path = as(file_path, 'character')
if(!missing(cache))  .obj@cache = as(cache, 'unsigned char')
if(!missing(index_cache))  .obj@index_cache = as(index_cache, 'unsigned char')
if(!missing(databaseSegments))  .obj@databaseSegments = as(databaseSegments, 'unsigned int')
if(!missing(databaseType))  .obj@databaseType = as(databaseType, 'integer')
if(!missing(mtime))  .obj@mtime = as(mtime, 'integer')
if(!missing(flags))  .obj@flags = as(flags, 'integer')
if(!missing(size))  .obj@size = as(size, 'integer')
if(!missing(record_length))  .obj@record_length = as(record_length, 'integer')
if(!missing(charset))  .obj@charset = as(charset, 'integer')
if(!missing(record_iter))  .obj@record_iter = as(record_iter, 'integer')
if(!missing(netmask))  .obj@netmask = as(netmask, 'integer')
if(!missing(last_mtime_check))  .obj@last_mtime_check = as(last_mtime_check, 'integer')
.obj})
setMethod('GeoIP', 'externalptr', function(GeoIPDatabase, file_path, cache, index_cache, databaseSegments, databaseType, mtime, flags, size, record_length, charset, record_iter, netmask, last_mtime_check, .obj = new('GeoIP')) as(GeoIPDatabase, 'GeoIP'))
setMethod('GeoIP', 'GeoIPRef', function(GeoIPDatabase, file_path, cache, index_cache, databaseSegments, databaseType, mtime, flags, size, record_length, charset, record_iter, netmask, last_mtime_check, .obj = new('GeoIP')) as(GeoIPDatabase, 'GeoIP'))
GeoIPRef = function(x) new('GeoIPRef', ref = x)
setMethod('names', 'GeoIPRef', function(x) c('GeoIPDatabase', 'file_path', 'cache', 'index_cache', 'databaseSegments', 'databaseType', 'mtime', 'flags', 'size', 'record_length', 'charset', 'record_iter', 'netmask', 'last_mtime_check'))
GeoIP_record_by_addr = 
  function(x1, x2, ..., .cif = CIF(pointerType, list(pointerType, stringType)))
{
  ans =  callCIF(.cif, 'GeoIP_record_by_addr',  x1, x2, ...)
  new('GeoIPRecordRef', ref = ans)
}

setClass('GeoIPRecord', representation(country_code = 'character', country_code3 = 'character', country_name = 'character', region = 'character', city = 'character', postal_code = 'character', latitude = 'numeric', longitude = 'numeric', x5017 = 'integer', area_code = 'integer', charset = 'integer', continent_code = 'character'))
setClass('GeoIPRecordRef', contains = 'RCReference')
setMethod('$', 'GeoIPRecordRef', function(x, name) 
getStructField(x, name, structType(list(country_code = stringType, country_code3 = stringType, country_name = stringType, region = stringType, city = stringType, postal_code = stringType, latitude = floatType, longitude = floatType, x5017 = pointerType, area_code = sint32Type, charset = sint32Type, continent_code = stringType))))
setAs('GeoIPRecordRef', 'GeoIPRecord', function(from) as(from@ref, 'GeoIPRecord'))
setAs('externalptr', 'GeoIPRecordRef', function(from) new('GeoIPRecordRef', ref = from))
setAs('externalptr', 'GeoIPRecord', function(from) setSlots( getStructValue(from, structType(list(country_code = stringType, country_code3 = stringType, country_name = stringType, region = stringType, city = stringType, postal_code = stringType, latitude = floatType, longitude = floatType, x5017 = pointerType, area_code = sint32Type, charset = sint32Type, continent_code = stringType))), new('GeoIPRecord')))
setGeneric('GeoIPRecord', function(country_code, country_code3, country_name, region, city, postal_code, latitude, longitude, x5017, area_code, charset, continent_code, .obj = new('GeoIPRecord')) standardGeneric('GeoIPRecord'))
setMethod('GeoIPRecord', 'ANY', function(country_code, country_code3, country_name, region, city, postal_code, latitude, longitude, x5017, area_code, charset, continent_code, .obj = new('GeoIPRecord')) {
if(!missing(country_code))  .obj@country_code = as(country_code, 'character')
if(!missing(country_code3))  .obj@country_code3 = as(country_code3, 'character')
if(!missing(country_name))  .obj@country_name = as(country_name, 'character')
if(!missing(region))  .obj@region = as(region, 'character')
if(!missing(city))  .obj@city = as(city, 'character')
if(!missing(postal_code))  .obj@postal_code = as(postal_code, 'character')
if(!missing(latitude))  .obj@latitude = as(latitude, 'numeric')
if(!missing(longitude))  .obj@longitude = as(longitude, 'numeric')
if(!missing(x5017))  .obj@x5017 = as(x5017, 'integer')
if(!missing(area_code))  .obj@area_code = as(area_code, 'integer')
if(!missing(charset))  .obj@charset = as(charset, 'integer')
if(!missing(continent_code))  .obj@continent_code = as(continent_code, 'character')
.obj})
setMethod('GeoIPRecord', 'externalptr', function(country_code, country_code3, country_name, region, city, postal_code, latitude, longitude, x5017, area_code, charset, continent_code, .obj = new('GeoIPRecord')) as(country_code, 'GeoIPRecord'))
setMethod('GeoIPRecord', 'GeoIPRecordRef', function(country_code, country_code3, country_name, region, city, postal_code, latitude, longitude, x5017, area_code, charset, continent_code, .obj = new('GeoIPRecord')) as(country_code, 'GeoIPRecord'))
GeoIPRecordRef = function(x) new('GeoIPRecordRef', ref = x)
setMethod('names', 'GeoIPRecordRef', function(x) c('country_code', 'country_code3', 'country_name', 'region', 'city', 'postal_code', 'latitude', 'longitude', 'x5017', 'area_code', 'charset', 'continent_code'))
